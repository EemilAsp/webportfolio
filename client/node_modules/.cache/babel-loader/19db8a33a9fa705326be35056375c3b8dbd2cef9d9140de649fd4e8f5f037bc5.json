{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eemil\\\\OneDrive\\\\Tiedostot\\\\LUT-yliopisto\\\\Website portfolio\\\\client\\\\src\\\\PorfolioContainer\\\\Home\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtilities\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadCast.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this));\n  };\n  const getHeaderOptionsClass = index => {\n    let classes = \"header_option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header_option_separator\";\n    if (selectedScreen === index) classes += \"selected_header_option\";\n    return;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_container\",\n      onClick: () => setShowHeaderOptions(!showHeaderOptions),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header_hamburger\",\n          onClick: () => setShowHeaderOptions(!showHeaderOptions),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header_hamburger_bars\",\n            icon: faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header_logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Aspholm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOptions ? \"header_options show_hamburger_options\" : \"header_options\",\n          children: getHeaderOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCast","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"sources":["C:/Users/eemil/OneDrive/Tiedostot/LUT-yliopisto/Website portfolio/client/src/PorfolioContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TOTAL_SCREENS,\r\n  GET_SCREEN_INDEX,\r\n} from \"../../../utilities/commonUtilities\";\r\nimport ScrollService from \"../../../utilities/ScrollService\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  const [selectedScreen, setSelectedScreen] = useState(0);\r\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\r\n\r\n  const updateCurrentScreen = (currentScreen) => {\r\n    if (!currentScreen || !currentScreen.screenInView) return;\r\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\r\n    if (screenIndex < 0) return;\r\n  };\r\n\r\n  let currentScreenSubscription =\r\n    ScrollService.currentScreenBroadCast.subscribe(updateCurrentScreen);\r\n\r\n  const getHeaderOptions = () => {\r\n    return TOTAL_SCREENS.map((screen, i) => (\r\n      <div\r\n        key={screen.screen_name}\r\n        className={getHeaderOptionsClass(i)}\r\n        onClick={() => switchScreen(i, screen)}\r\n      >\r\n        <span>{screen.screen_name}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const getHeaderOptionsClass = (index) => {\r\n    let classes = \"header_option\";\r\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header_option_separator\";\r\n\r\n    if (selectedScreen === index) classes += \"selected_header_option\";\r\n    return;\r\n  };\r\n\r\n  const switchScreen = (index, screen) => {\r\n    let screenComponent = document.getElementById(screen.screen_name);\r\n    if (!screenComponent) return;\r\n\r\n    screenComponent.scrollIntoView({ behavior: \"smooth\" });\r\n    setSelectedScreen(index);\r\n    setShowHeaderOptions(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"header_container\"\r\n        onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n      >\r\n        <div className=\"header_parent\">\r\n          <div\r\n            className=\"header_hamburger\"\r\n            onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n          >\r\n            <FontAwesomeIcon className=\"header_hamburger_bars\" icon={faBars} />\r\n          </div>\r\n          <div className=\"header_logo\">\r\n            <span>Aspholm</span>\r\n          </div>\r\n          <div\r\n            className={\r\n              showHeaderOptions\r\n                ? \"header_options show_hamburger_options\"\r\n                : \"header_options\"\r\n            }\r\n          >\r\n            {getHeaderOptions()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}